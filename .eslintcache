[{"F:\\JFTech\\Puntocero\\myapp\\src\\index.js":"1","F:\\JFTech\\Puntocero\\myapp\\src\\App.js":"2","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\Registration.js":"3","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\Login.js":"4","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\CentralWindow.js":"5","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\UserImageUpload.js":"6","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\PaymentManagment.js":"7","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\config\\firebase.js":"8","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\VaweBackground.js":"9","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\UploadIMG.js":"10","F:\\JFTech\\Puntocero\\myapp\\src\\Container\\index.js":"11","F:\\JFTech\\Puntocero\\myapp\\src\\Container\\Home\\index.js":"12","F:\\JFTech\\Puntocero\\myapp\\src\\Container\\CentralInfo\\index.js":"13","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\Header\\index.js":"14"},{"size":151,"mtime":1610130797849,"results":"15","hashOfConfig":"16"},{"size":3204,"mtime":1610561949646,"results":"17","hashOfConfig":"16"},{"size":4702,"mtime":1610578070482,"results":"18","hashOfConfig":"16"},{"size":2077,"mtime":1610130797743,"results":"19","hashOfConfig":"16"},{"size":1704,"mtime":1610401809912,"results":"20","hashOfConfig":"16"},{"size":951,"mtime":1610429975471,"results":"21","hashOfConfig":"16"},{"size":1279,"mtime":1610578154064,"results":"22","hashOfConfig":"16"},{"size":605,"mtime":1610139902154,"results":"23","hashOfConfig":"16"},{"size":266,"mtime":1610130797747,"results":"24","hashOfConfig":"16"},{"size":2695,"mtime":1610130797746,"results":"25","hashOfConfig":"16"},{"size":110,"mtime":1610154423334,"results":"26","hashOfConfig":"16"},{"size":10290,"mtime":1610577968254,"results":"27","hashOfConfig":"16"},{"size":18484,"mtime":1610559635415,"results":"28","hashOfConfig":"16"},{"size":376,"mtime":1610154891302,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1rzzr0e",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"F:\\JFTech\\Puntocero\\myapp\\src\\index.js",[],["68","69"],"F:\\JFTech\\Puntocero\\myapp\\src\\App.js",["70","71","72"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Login from \"./Component/Login\";\r\nimport Registration from \"./Component/Registration\";\r\nimport UserImageUpload from \"./Component/UserImageUpload\";\r\nimport CentralWindow from \"./Component/CentralWindow\";\r\nimport PaymentManagment from \"./Component/PaymentManagment\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {\r\n  Home,\r\n  CentralInfo\r\n} from './Container'\r\nimport { auth, db } from \"./Component/config/firebase\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\nfunction App() {\r\n  const [user, setuser] = useState(null);\r\n  const [userData, setuserData] = useState({});\r\n  const [loading, setloading] = useState(true);\r\n\r\n  const getDataFromDB = async () => {\r\n    const dbRef = db.ref(`User/`).child(`${user?.uid}`);\r\n\r\n    dbRef.on(\"value\", (snapshot) => {\r\n      setuserData(snapshot.val());\r\n    });\r\n  };\r\n\r\n  const addEvent = async () => {\r\n    const dbRef = (await db.ref(`Table/Event2/`).push()).key;\r\n    db.ref(`Table/Event2/` + dbRef).set({\r\n      name: 'Pista 2',\r\n      uid: dbRef,\r\n      price: 100,\r\n      held: '',\r\n      created_at: Date.now(),\r\n      imageUrl: \"https://firebasestorage.googleapis.com/v0/b/melini-business.appspot.com/o/images%2FJBkMcg30o0ZFWDWpfo2UMfca0jB2?alt=media&token=63704c59-97f3-45d6-b3a7-d814accec3c0\",\r\n      adultTicket: 10,\r\n      kidTicket: 0,\r\n    })\r\n  };\r\n\r\n  const onSignout = async () => {\r\n    await auth.signOut()\r\n    setuser(null)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setuser(user);\r\n        setloading(false);\r\n      } else {\r\n        setloading(false);\r\n      }\r\n    });\r\n    getDataFromDB();\r\n  }, [user]);\r\n  // setInterval(() => {\r\n  //   addEvent()\r\n  // }, 200);\r\n\r\n  console.log(userData);\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" >\r\n          {loading ? (\r\n            \"Loading.....\"\r\n          ) : user ? (\r\n            <CentralWindow\r\n              url={userData?.image?.imgUri}\r\n              history={history}\r\n              onSignout={onSignout}\r\n              userName={userData?.UserName}\r\n            />\r\n          ) : (\r\n                <Login />\r\n              )}\r\n        </Route>\r\n        <Route exact path=\"/upload_image\">\r\n          <UserImageUpload\r\n            user={user}\r\n            history={history}\r\n            userName={userData?.UserName}\r\n            url={userData?.image?.imgUri}\r\n          />\r\n        </Route>\r\n        <Route path=\"/event-add\" history={history} component={Home} />\r\n        <Route exact path=\"/central-information\" >\r\n          <CentralInfo\r\n            user={user}\r\n            history={history}\r\n            userName={userData?.UserName}\r\n            url={userData?.image?.imgUri}\r\n          />\r\n        </Route>\r\n        <Route path=\"/registor_form\" history={history} component={Registration} />\r\n        <Route path=\"/payment_managment_system\" history={history} component={PaymentManagment} />\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\Registration.js",["73"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./registration.css\";\r\nimport BG from \"./Assets/bg_logo.png\";\r\n\r\nimport { auth, db } from \"./config/firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Registration = () => {\r\n  const [userName, setuserName] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [major, setMajor] = useState(\"\");\r\n  const [DoB, setDoB] = useState(\"\");\r\n  const [phone, setphone] = useState(\"\");\r\n  const [career, setcareer] = useState(\"\");\r\n  const [generatedCode, setgeneratedCode] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n\r\n  // Auto generatted Code function\r\n  useEffect(() => {\r\n    function makeid(length) {\r\n      var result = \"\";\r\n      var characters =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n      var charactersLength = characters.length;\r\n      for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(\r\n          Math.floor(Math.random() * charactersLength)\r\n        );\r\n      }\r\n      return result;\r\n    }\r\n    setgeneratedCode(makeid(6));\r\n  }, [loading]);\r\n\r\n  // registor function sending data on firebase\r\n\r\n  function registor(e) {\r\n    e.preventDefault();\r\n    setloading(true);\r\n    if (!userName == \"\") {\r\n      auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(async (user) => {\r\n          var User = user.user;\r\n          await db.ref(\"User/\" + User.uid).set({\r\n            UserName: userName,\r\n            Email: User.email,\r\n            Code: generatedCode,\r\n            Major: major,\r\n            DoB: DoB,\r\n            Phone: phone,\r\n          });\r\n        })\r\n        .then(() => (window.location = \"/upload_image\"))\r\n        .catch((error) => {\r\n          alert(error.message);\r\n          setloading(false);\r\n          // ..\r\n        });\r\n    }\r\n\r\n    setemail(\"\");\r\n    setDoB(\"\");\r\n    setMajor(\"\");\r\n    setgeneratedCode(\"\");\r\n    setpassword(\"\");\r\n    setuserName(\"\");\r\n    setcareer(\"\");\r\n    setphone(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"registor\">\r\n      <div className=\"vawe_bg_registor\">\r\n        <img src={BG} alt=\"\" />\r\n      </div>\r\n      <div className=\"registor_detail\">\r\n        <div className=\"detail\">\r\n          <h2>Completa tu registro</h2>\r\n          <form onSubmit={registor} className=\"detail_input\">\r\n            <input\r\n              className=\"user_name\"\r\n              type=\"text\"\r\n              value={userName}\r\n              placeholder=\"\r\n              Nombre completo con letras capitulares\"\r\n              onChange={(e) => setuserName(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setemail(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Crear contraseña\"\r\n              onChange={(e) => setpassword(e.target.value)}\r\n              required\r\n            />\r\n            <input disabled type=\"text\" value={generatedCode} required />\r\n\r\n            <input\r\n              type=\"text\"\r\n              value={major}\r\n              onChange={(e) => setMajor(e.target.value)}\r\n              placeholder=\"Ambassador Key\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              name=\"begin\"\r\n              placeholder=\"dd-mm-yyyy\"\r\n              value={DoB}\r\n              onChange={(e) => setDoB(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <div className=\"career__cellPhone\">\r\n              <input\r\n                type=\"text \"\r\n                value={career}\r\n                placeholder=\"Major\"\r\n                required\r\n                onChange={(e) => setcareer(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                value={phone}\r\n                placeholder=\"Celular\"\r\n                required\r\n                onChange={(e) => setphone(e.target.value)}\r\n              />\r\n            </div>\r\n            <button className=\"sumbit_btn\" disabled={loading}>\r\n              {loading && (\r\n                <FontAwesomeIcon\r\n                  icon={faSpinner}\r\n                  pulse\r\n                  style={{ marginRight: 5, fontSize: 15 }}\r\n                />\r\n              )}\r\n              Enviar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\Login.js",["74","75","76","77"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from \"./config/firebase\";\r\nimport \"./Login.css\";\r\nimport BG from \"./Assets/bg_logo.png\";\r\nconst Login = () => {\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [error, seterror] = useState(null);\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault()\r\n    if (!email == \"\" && !password == \"\") {\r\n      auth\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then((user) => {\r\n          console.log(\"logged in\");\r\n        })\r\n        .catch((error) => {\r\n          // seterror(error)\r\n          alert(error.message)\r\n        });\r\n\r\n      setpassword(\"\");\r\n      setemail(\"\");\r\n    } else {\r\n      alert(\"nnnn\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"vawe_bg\">\r\n        <img src={BG} alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"sign_in\">\r\n        <div className=\"sign_in_box\">\r\n          <h2>bienvenida</h2>\r\n          <form onSubmit={signIn} className=\"sign_in_form\">\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setemail(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"Password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setpassword(e.target.value)}\r\n              required\r\n            />\r\n            <button>registrarse</button>\r\n          </form>\r\n          <div className=\"registor_link\">\r\n            <p>no tener cuenta ?</p>\r\n            <Link\r\n              style={{\r\n                color: \"blue\",\r\n                cursor: \"pointer\",\r\n                textDecoration: \"none\",\r\n                fontSize: 12,\r\n                marginLeft: 5,\r\n              }}\r\n              to=\"/registor_form\"\r\n            >\r\n              Regístrate\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\CentralWindow.js",["78"],"import React from \"react\";\r\nimport VaweBackground from \"./VaweBackground\";\r\nimport \"./CentralWindow.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CentralWindow = ({ userName, url, onSignout }) => {\r\n\r\n  return (\r\n    <div className=\"central_window\">\r\n\r\n      <VaweBackground />\r\n      <div className=\"content\">\r\n\r\n        <div className=\"section_1\">\r\n          <div className=\"user_img\">\r\n            {url ?\r\n              <img src={url} alt=\"upload image\" />\r\n              : <FontAwesomeIcon\r\n                icon={faSpinner}\r\n                pulse\r\n                style={{ marginTop: 30, alignSelf: \"center\", fontSize: 35 }}\r\n              />\r\n            }\r\n            <h3>{userName}</h3>\r\n            <button onClick={() => onSignout()}>\r\n              Sign out\r\n            </button>\r\n          </div>\r\n          <div className=\"trade_mark\"></div>\r\n        </div>\r\n        <div className=\"section_2\">\r\n          <div className=\"triangle\" />\r\n          <div className=\"payment_section\">\r\n            <div className=\"total_amount\">\r\n              <h3>Total a pagar</h3>\r\n              <input type=\"number\" />\r\n            </div>\r\n            <div className=\"total_diposit\">\r\n              <h3>Total a abonado</h3>\r\n              <input type=\"number\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button>\r\n          <Link className={'payment_button'} to={\"/payment_managment_system\"}>\r\n            Systema de gestion de pagos\r\n          </Link>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CentralWindow;\r\n","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\UserImageUpload.js",["79","80","81","82"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./UserImageUpload.css\";\r\n\r\nimport VaweBackground from \"./VaweBackground\";\r\nimport UploadIMG from \"./UploadIMG\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserImageUpload = ({ user, userName, url }) => {\r\n  const [imgUri, setimgUri] = useState({});\r\n  const [Url, setUrl] = useState(\"\");\r\n\r\n  const img = async () => {\r\n    setUrl(await url);\r\n  };\r\n  useEffect(() => {\r\n    img();\r\n  }, [url]);\r\n  console.log(url);\r\n\r\n  return (\r\n    <div className=\"user_image_upload\">\r\n      <VaweBackground />\r\n      <div className=\"central_content\">\r\n        <div className=\"content_1\">\r\n          <UploadIMG user={user} userName={userName} Url={url} />\r\n\r\n          <Link to={\"/central-information\"} className=\"select_event\">\r\n            <button >Selecciona evento </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      I\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserImageUpload;\r\n","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\PaymentManagment.js",[],"F:\\JFTech\\Puntocero\\myapp\\src\\Component\\config\\firebase.js",[],"F:\\JFTech\\Puntocero\\myapp\\src\\Component\\VaweBackground.js",[],"F:\\JFTech\\Puntocero\\myapp\\src\\Component\\UploadIMG.js",["83","84","85"],"import React, { useEffect, useState } from \"react\";\r\nimport { storage, db } from \"./config/firebase\";\r\nimport \"./UploadIMG.css\";\r\nimport DefaultImage from \"./Assets/default-user-image.png\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst UploadIMG = ({ user, userName, Url }) => {\r\n  const [imageAsFile, setImageAsFile] = useState(\"\");\r\n  const [imageAsUrl, setImageAsUrl] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const handleImageAsFile = (e) => {\r\n    const image =  e.target.files[0] ;\r\n    setImageAsFile(() => image);\r\n\r\n  };\r\n\r\n  const handleFirebaseUpload = (e) => {\r\n    e.preventDefault();\r\n\r\n    setloading(true)\r\n    // async magic goes here...\r\n    if (imageAsFile === \"\") {\r\n      // console.error(`not an image, the image file is a ${typeof imageAsFile}`);\r\n    }\r\n    const uploadTask = storage.ref(`/images/${user?.uid}/`).put(imageAsFile);\r\n    //initiates the firebase side uploading\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        //takes a snap shot of the process as it is happening\r\n      },\r\n      (err) => {\r\n        //catches the errors\r\n      },\r\n      async () => {\r\n        // gets the functions from storage refences the image storage in firebase by the children\r\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n        await storage\r\n          .ref(\"images\")\r\n          .child(user.uid)\r\n          .getDownloadURL()\r\n          .then((fireBaseUrl) => {\r\n            setImageAsUrl(fireBaseUrl);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n \r\n\r\n  useEffect(async () => {\r\n    if (imageAsUrl) {\r\n      await db.ref(`User/`).child(`${user.uid}/image`).set({\r\n        imgUri: imageAsUrl,\r\n      }).then(()=>{ \r\n        setloading(false)\r\n       \r\n      });\r\n    }\r\n  }, [imageAsUrl]);\r\n\r\n  return (\r\n    <div className=\"user_img\">\r\n       {loading ? (\r\n              <div className=\"loader\">\r\n                  <FontAwesomeIcon\r\n                  icon={faSpinner}\r\n                  pulse\r\n                  style={{ marginTop: 30,\r\n                    alignSelf:\"center\",\r\n                    fontSize: 15 }}\r\n                />\r\n              </div>\r\n              ): (\r\n                <img src={Url ? Url : DefaultImage} alt=\"upload image\" />\r\n              )}\r\n      \r\n      <form className=\"img_upload_form\" onSubmit={handleFirebaseUpload}>\r\n        <input type=\"file\" accept=\"image/*\"  onChange={handleImageAsFile} />\r\n        <button disabled={loading}>Done !</button>\r\n      </form>\r\n      <h3>{userName}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadIMG;\r\n","F:\\JFTech\\Puntocero\\myapp\\src\\Container\\index.js",[],"F:\\JFTech\\Puntocero\\myapp\\src\\Container\\Home\\index.js",["86","87","88","89","90","91","92","93","94","95","96"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../../Component/Header'\r\nimport { Grid, TextField, Button, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Logo from \"../../Component/Assets/logo.jpg\";\r\nimport { auth, db } from \"../../Component/config/firebase\";\r\n\r\nvar QRCode = require('qrcode.react');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    button: {\r\n        marginTop: 10,\r\n        marginRight: 20,\r\n        marginBottom: 20\r\n    },\r\n    sname: {\r\n        marginTop: 20\r\n    }\r\n}));\r\n\r\nfunction Home({ history }) {\r\n    const classes = useStyles();\r\n    const [state, setstate] = useState({\r\n        QRValue: null,\r\n        eventName: '',\r\n        eventDate: '',\r\n        eventMusic: '',\r\n        eventBanquet: '',\r\n        eventVideo: '',\r\n        sName: '',\r\n        sDetail: '',\r\n        gift: '',\r\n        giftDetails: '',\r\n    })\r\n    const [user, setuser] = useState(null);\r\n    const [loading, setloading] = useState(false);\r\n\r\n\r\n    useEffect(async () => {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setuser(user);\r\n                setloading(false);\r\n            } else {\r\n                setloading(false);\r\n            }\r\n        });\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        const params = history.location.state && history.location.state.value\r\n        if (params) {\r\n            setstate({\r\n                ...state,\r\n                QRValue: params,\r\n                sName: params?.selectedTable[0]?.eventId\r\n            })\r\n        }\r\n    }, [history])\r\n\r\n    const handleChange = (type, value) => {\r\n        setstate({\r\n            ...state,\r\n            [type]: value.target.value\r\n        })\r\n    }\r\n\r\n    const handleQRCode = () => {\r\n        const { eventName, eventDate, eventMusic, eventBanquet, eventVideo, gift, sName, sDetail, giftDetails } = state\r\n        const value = {\r\n            eventName: eventName,\r\n            eventDate: eventDate,\r\n            eventMusic: eventMusic,\r\n            eventBanquet: eventBanquet,\r\n            eventVideo: eventVideo,\r\n            gift: gift,\r\n            sName: sName,\r\n            sDetail: sDetail,\r\n            giftDetails: giftDetails\r\n        }\r\n        setstate({\r\n            ...state,\r\n            QRValue: JSON.stringify(value)\r\n        })\r\n    }\r\n\r\n    const handleQRCodeRemove = () => {\r\n        setstate({\r\n            eventName: '',\r\n            eventDate: '',\r\n            eventMusic: '',\r\n            eventBanquet: '',\r\n            gift: '',\r\n            sName: '',\r\n            sDetail: '',\r\n            giftDetails: '',\r\n            QRValue: null\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const { QRValue, eventName, eventMusic, eventBanquet, eventVideo, eventDate, gift, sName, sDetail, giftDetails } = state\r\n    return (\r\n        <div class=\"\">\r\n            <Header />\r\n            <div style={{ display: 'flex', padding: 20 }}>\r\n                <Grid container justify={\"center\"} >\r\n                    <Grid item xs={12} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n\r\n                        <Grid item xs={6} style={{ width: '100%' }}>\r\n\r\n\r\n\r\n                            {\r\n                                QRValue ?\r\n                                    <>\r\n                                        <Grid container direction={'column'} alignItems={\"center\"} style={{}}>\r\n                                            <img src={Logo} style={{ width: 240, margin: 20 }} alt={\"\"} />\r\n                                            <div className=\"\" style={{ width: '100%' }}>\r\n                                                <span style={{ fontSize: 18, backgroundColor: '#fff', padding: 15 }}>{eventDate}</span>\r\n                                                <div style={{ width: '100%', height: 4, backgroundColor: '#000', marginTop: -12 }} />\r\n                                            </div>\r\n                                            <Grid container justify={\"space-around\"} style={{ marginBottom: 20, marginTop: 20 }}>\r\n                                                <div className=\"\">\r\n                                                    <div style={{ fontWeight: 'bold' }}>MUSICA</div>\r\n                                                    <div style={{ fontSize: 12, color: 'grey' }}>{eventMusic}</div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <div style={{ fontWeight: 'bold' }}>BANQUETE</div>\r\n                                                    <div style={{ fontSize: 12, color: 'grey' }}>{eventBanquet}</div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <div style={{ fontWeight: 'bold' }}>FOTO Y VIDEO</div>\r\n                                                    <div style={{ fontSize: 12, color: 'grey' }}>{eventVideo}</div>\r\n                                                </div>\r\n                                            </Grid>\r\n                                            <div className=\"\">Welcome to Experiences 4.0!</div>\r\n                                            <div className={classes.sname}>{sName}</div>\r\n                                            <Grid container justify={\"space-around\"} style={{ marginBottom: 20, marginTop: 20 }}>\r\n                                                <div className=\"\">Table: L4</div>\r\n                                                <div className=\"\">Seat: 1</div>\r\n                                            </Grid>\r\n                                            <QRCode size={200} style={{ margin: 20 }} value={QRValue} />\r\n                                            <Grid item xs={6}>\r\n                                                <div className=\"\">This is your QR invitation, just sent it to your guest with this he/she be access to the event</div>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Button onClick={handleQRCodeRemove} className={classes.button} variant={\"contained\"} color={\"primary\"}>Remove</Button>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Button onClick={() => window.location.href = \"/central-information\"} className={classes.button} variant={\"contained\"} color={\"primary\"}>Done</Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </>\r\n                                    : <CircularProgress />\r\n                                // <>\r\n                                //     <div style={{ fontSize: 34 }}>Online Invitation</div>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={eventName} onChange={(value) => handleChange('eventName', value)} placeholder={\"Event Name \"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={eventDate} onChange={(value) => handleChange('eventDate', value)} placeholder={\"Event Date\"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={eventMusic} onChange={(value) => handleChange('eventMusic', value)} placeholder={\"Event Music\"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={eventBanquet} onChange={(value) => handleChange('eventBanquet', value)} placeholder={\"Event Banquet\"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={eventVideo} onChange={(value) => handleChange('eventVideo', value)} placeholder={\"Event Video\"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={sName} onChange={(value) => handleChange('sName', value)} placeholder={\"Student Name\"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={sDetail} onChange={(value) => handleChange('sDetail', value)} placeholder={\"Student Details\"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={gift} onChange={(value) => handleChange('gift', value)} placeholder={\"Gift Table\"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <TextField fullWidth className={classes.input} value={giftDetails} onChange={(value) => handleChange('giftDetails', value)} placeholder={\"Gift Table Details\"} />\r\n                                //     </Grid>\r\n                                //     <Grid item xs={12}>\r\n                                //         <Button onClick={handleQRCode} className={classes.button} variant={\"contained\"} color={\"primary\"}>Continue</Button>\r\n                                //     </Grid>\r\n                                // </>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","F:\\JFTech\\Puntocero\\myapp\\src\\Container\\CentralInfo\\index.js",["97","98","99","100","101","102"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../../Component/Header/index'\r\nimport { Grid, Button, Paper, Dialog, DialogTitle, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Student from '../../Component/Assets/student.jpg'\r\nimport { db } from '../../Component/config/firebase'\r\nimport moment from 'moment'\r\nimport './index.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { chunk } from \"lodash\";\r\nimport ReactTooltip from 'react-tooltip'\r\nvar QRCode = require('qrcode.react');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    button: {\r\n        marginTop: 10,\r\n        marginRight: 20,\r\n        marginBottom: 20\r\n    },\r\n    sname: {\r\n        marginTop: 20\r\n    },\r\n    listContainer: {\r\n        padding: 20,\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst alphabets = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n]\r\n\r\nfunction CentralInfo(props) {\r\n    const classes = useStyles();\r\n    const [state, setstate] = useState({\r\n        tables: [],\r\n        open: false,\r\n        adultTicket: 0,\r\n        kidTicket: 0,\r\n        tableIndex: null,\r\n        tableDataIndex: null,\r\n        selectedTable: [],\r\n        totalPrice: 0,\r\n        totalATickets: 0,\r\n        totalKTickets: 0,\r\n        hoverItem: null\r\n    })\r\n\r\n    const snapshotToArray = snapshot => Object.entries(snapshot).map(e => Object.assign(e[1], { uid: e[0] }))\r\n\r\n\r\n    const getTable = async (update) => {\r\n        const dbRef = db.ref(`Table`);\r\n        dbRef.on(\"value\", (snapshot) => {\r\n            setstate({\r\n                ...state,\r\n                tables: snapshotToArray(snapshot.val())\r\n            })\r\n            if (update) {\r\n                setstate({\r\n                    ...state,\r\n                    adultTicket: '',\r\n                    kidTicket: '',\r\n                    open: false,\r\n                    tableData: snapshotToArray(snapshotToArray(snapshot.val())[state.tableIndex])\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    const buyTicket = () => {\r\n        const {\r\n            buyTicketData,\r\n            kidTicket,\r\n            adultTicket,\r\n            tableIndex,\r\n            tables,\r\n            totalPrice,\r\n            totalATickets,\r\n            totalKTickets,\r\n            tableDataIndex,\r\n            selectedTable\r\n        } = state;\r\n        let selected = {\r\n            eventId: tables[tableIndex].uid,\r\n            eventData: buyTicketData,\r\n            adultTicket: Number(adultTicket),\r\n            kidTicket: Number(kidTicket),\r\n        }\r\n        tables[tableIndex][buyTicketData.uid].adultTicket = buyTicketData.adultTicket + Number(adultTicket)\r\n        tables[tableIndex][buyTicketData.uid].kidTicket = buyTicketData.kidTicket + Number(kidTicket)\r\n        setstate({\r\n            ...state,\r\n            tables: tables,\r\n            selectedTable: [...selectedTable, selected],\r\n            totalPrice: totalPrice + (buyTicketData.price * (Number(kidTicket) + Number(adultTicket))),\r\n            totalATickets: totalATickets + Number(adultTicket),\r\n            totalKTickets: totalKTickets + Number(kidTicket),\r\n            tableData: tables[tableIndex],\r\n            open: false,\r\n            adultTicket: '',\r\n            tableIndex: tableIndex,\r\n            kidTicket: '',\r\n        })\r\n        chunked = chunk(tables[tableIndex], 15)\r\n        // db.ref(`Table/` + tables[tableIndex].uid + \"/\" + buyTicketData.uid).update({\r\n        //     adultTicket: adultTicket ? buyTicketData.adultTicket + Number(adultTicket) : buyTicketData.adultTicket,\r\n        //     kidTicket: kidTicket ? buyTicketData.kidTicket + Number(kidTicket) : buyTicketData.kidTicket,\r\n        // })\r\n        //     .then(res => {\r\n        //         getTable('update')\r\n        //         setTimeout(() => {\r\n        //             // setstate({\r\n        //             //     ...state,\r\n\r\n        //             // })\r\n        //         }, 1000);\r\n        //     }).catch(error => {\r\n        //         alert(error.message)\r\n        //     })\r\n    };\r\n\r\n    const buyTicketModal = (data, index) => {\r\n        setstate({\r\n            ...state,\r\n            buyTicketData: data,\r\n            open: true,\r\n            tableDataIndex: index\r\n        })\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setstate({\r\n            ...state,\r\n            open: false\r\n        })\r\n    };\r\n\r\n    const handlechange = (type, value) => {\r\n        setstate({\r\n            ...state,\r\n            [type]: value\r\n        })\r\n    };\r\n\r\n    const makePayment = () => {\r\n        const { selectedTable, totalATickets, totalKTickets, totalPrice } = state;\r\n        const value = {\r\n            selectedTable, totalATickets, totalKTickets, totalPrice\r\n        }\r\n        props.history.push('/payment_managment_system', { value: value })\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTable()\r\n    }, [])\r\n\r\n\r\n    function getUnique(array, key) {\r\n        if (typeof key !== 'function') {\r\n            const property = key;\r\n            key = function (item) { return item[property]; };\r\n        }\r\n        return Array.from(array.reduce(function (map, item) {\r\n            const k = key(item);\r\n            if (!map.has(k)) map.set(k, item);\r\n            return map;\r\n        }, new Map()).values());\r\n    }\r\n\r\n    const { tables, tableData, open, kidTicket, adultTicket, selectedTable, totalATickets, totalPrice, totalKTickets, hoverItem } = state\r\n    var chunked = chunk(tableData, 15);\r\n    return (\r\n        <div class=\"\">\r\n            <Header />\r\n            <div style={{ display: 'flex', padding: 20 }}>\r\n                <Grid container justify={\"center\"}>\r\n                    <Grid item xs={12} style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                        <div style={{ fontSize: 34 }}>Central Information</div>\r\n                        <Grid item xs={12}>\r\n                            <div style={{ fontSize: 24, marginTop: 10 }}>Selected Tables</div>\r\n                            <div style={{ marginTop: 10 }}>\r\n                                Tables:\r\n                                {\r\n                                    getUnique(selectedTable && selectedTable, \"eventId\").map((res, index) => {\r\n                                        return (\r\n                                            <span style={{ marginLeft: 10 }}>{res.eventId}</span>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div style={{ marginTop: 10 }}>\r\n                                Adulto Tickets:\r\n                                <span style={{ marginLeft: 10 }}>{totalATickets}</span>\r\n                            </div>\r\n                            <div style={{ marginTop: 10 }}>\r\n                                Kids Tickets:\r\n                                <span style={{ marginLeft: 10 }}>{totalKTickets}</span>\r\n                            </div>\r\n                            <div style={{ marginTop: 10 }}>\r\n                                Total Price to pay:\r\n                                <span style={{ marginLeft: 10 }}>{\"$\" + totalPrice}</span>\r\n                            </div>\r\n                            <Button className={classes.button} variant=\"outlined\">\r\n                                <Link style={{ textDecoration: 'none', color: '#000' }} to={{\r\n                                    pathname: '/payment_managment_system',\r\n                                    state: {\r\n                                        value: {\r\n                                            selectedTable, totalATickets, totalKTickets, totalPrice\r\n                                        }\r\n                                    }\r\n                                }} >\r\n                                    {\"Manage to Payment\"}\r\n                                </Link>\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                tables.map((res, index) => (\r\n                                    <Button onClick={() => setstate({ ...state, tableData: snapshotToArray(res), tableIndex: index })} className={classes.button} variant=\"outlined\">{res.uid}</Button>\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            {/* <Grid container item xs={12} lg={12} spacing={3} alignItems={\"center\"} className={classes.listContainer}>\r\n                {\r\n                    tableData && tableData.length && tableData.map((item, index) => {\r\n                        if (item.name)\r\n                            return (\r\n                                <Grid key={index} item md={2} sm={6} xs={12} onClick={() => buyTicketModal(item, index)} className={'tableListing'}>\r\n                                    <Paper elevation={5} style={{ borderRadius: 10, backgroundColor: Number(item.adultTicket) + Number(item.kidTicket) > 9 ? \"yellow\" : Number(item.adultTicket) + Number(item.kidTicket) === 0 ? \"white\" : 'orange' }}>\r\n                                        <div className=\"ps-block--category\">\r\n                                            <img style={{ width: '100%', height: 120, borderTopLeftRadius: 10, borderTopRightRadius: 10 }} src={Student} alt=\"burger\" />\r\n                                            <div style={{ padding: 5, display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                                                <p>Event Name:{item.name}</p>\r\n                                                <p>Event Date: {moment(item.created_at).format('MMM-DD-YYYY')}</p>\r\n                                                <div>{`Money ${item.price}$`}</div>\r\n                                                <div>\r\n                                                    <p className={classes.foodOrder}>{`Tickets ${Number(item.adultTicket) + Number(item.kidTicket)}`}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            )\r\n                    })\r\n                }\r\n            </Grid> */}\r\n            <Grid container item xs={12} lg={12} spacing={3} justify={\"center\"} alignItems={\"center\"} className={classes.listContainer}>\r\n                {\r\n                    chunked && chunked.length > 0 && chunked[0].length > 0 &&\r\n                    <Grid container justify={'space-around'}>\r\n                        <div style={{ border: '1px solid #000', display: 'flex', alignItems: 'center', justifyContent: 'center', width: 250, height: 40 }}>\r\n                            COCINA\r\n                    </div>\r\n                        <div style={{ border: '1px solid #000', display: 'flex', alignItems: 'center', justifyContent: 'center', width: 250, height: 40 }}>\r\n                            COCINA\r\n                    </div>\r\n                    </Grid>\r\n                }\r\n                {\r\n                    chunked && chunked.length > 0 && chunked[0].length > 0 && alphabets.map((res, j) => {\r\n                        if (j <= (chunked[0].length - 1)) {\r\n\r\n                            return (\r\n                                <div style={{\r\n                                    margin: 10,\r\n                                    width: 50, textAlign: 'center'\r\n                                }}>{res}</div>\r\n                            )\r\n                        } else return null\r\n                    })\r\n                }\r\n                {chunked.map((chunk, i) => (\r\n                    <Grid style={{ width: '82%', flexDirection: 'row', display: 'flex' }} key={i}>\r\n                        <div style={{ height: 50, paddingTop: 30 }}>{i + 1}</div>\r\n                        {\r\n                            chunk && chunk.length > 0 && chunk.map((item, index) => {\r\n                                if (item.name && item.type !== \"stage\") {\r\n                                    return (\r\n                                        <Grid key={index} data-tip='' data-for={item.uid} onClick={() => buyTicketModal(item, index)} className={'tableListing'}>\r\n                                            <Paper elevation={1} style={{\r\n                                                borderRadius: 10, margin: 10,\r\n                                                width: 50, height: 50,\r\n                                                backgroundColor: Number(item.adultTicket) + Number(item.kidTicket) > 9 ? \"yellow\" : Number(item.adultTicket) + Number(item.kidTicket) === 0 ? \"white\" : 'orange'\r\n                                            }}>\r\n                                                <ReactTooltip backgroundColor={\"transparent\"} effect={\"solid\"} id={item.uid} aria-haspopup='false' >\r\n                                                    <Paper elevation={5} style={{ borderRadius: 10, width: 200, backgroundColor: \"white\" }}>\r\n                                                        <div className=\"ps-block--category\">\r\n                                                            <img style={{ width: '100%', height: 120, borderTopLeftRadius: 10, borderTopRightRadius: 10 }} src={Student} alt=\"burger\" />\r\n                                                            <div style={{ padding: 5, display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                                                                <p>Event Name:{item.name}</p>\r\n                                                                <p>Event Date: {moment(item.created_at).format('MMM-DD-YYYY')}</p>\r\n                                                                <div>{`Money ${item.price}$`}</div>\r\n                                                                <div>\r\n                                                                    <p className={classes.foodOrder}>{`Tickets ${Number(item.adultTicket) + Number(item.kidTicket)}`}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Paper>\r\n                                                </ReactTooltip>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                    )\r\n                                }\r\n                                else if (item.name && item.type === \"stage\" && item.main === true) {\r\n                                    return (\r\n                                        <div style={{\r\n                                            marginLeft: 15, marginRight: 10,\r\n                                            width: 400, backgroundColor: 'blue', fontWeight: 'bold', fontSize: 28,\r\n                                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                                        }}>{item?.stagename}</div>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                        <div style={{ height: 50, paddingTop: 30 }}>{i + 1}</div>\r\n                    </Grid>\r\n                ))}\r\n                <Grid container justify={'center'}>\r\n\r\n                    {\r\n                        chunked && chunked.length > 0 && chunked[0].length > 0 && alphabets.map((res, j) => {\r\n                            if (j <= (chunked[0].length - 1)) {\r\n\r\n                                return (\r\n                                    <div style={{\r\n                                        margin: 10,\r\n                                        width: 50, textAlign: 'center'\r\n                                    }}>{res}</div>\r\n                                )\r\n                            } else return null\r\n                        })\r\n                    }\r\n                </Grid>\r\n\r\n                {\r\n                    chunked && chunked.length > 0 && chunked[0].length > 0 &&\r\n                    <Grid style={{ width: '82%', flexDirection: 'row', display: 'flex' }} >\r\n                        <div style={{ border: '1px solid #000', display: 'flex', alignItems: 'center', justifyContent: 'center', width: 250, height: 150 }}>\r\n                            Baños\r\n                    </div>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n                <DialogTitle id=\"simple-dialog-title\">Select the ticket you want</DialogTitle>\r\n                <Grid className={'ticketDialog'}>\r\n                    <TextField\r\n                        placeholder={\"Adult Ticket\"}\r\n                        className={\"textField\"}\r\n                        value={adultTicket === 0 ? '' : adultTicket}\r\n                        onChange={(value) => handlechange('adultTicket', value.target.value)}\r\n                    />\r\n                    <TextField\r\n                        placeholder={\"Kids Ticket\"}\r\n                        className={\"textField\"}\r\n                        value={kidTicket === 0 ? '' : kidTicket}\r\n                        onChange={(value) => handlechange('kidTicket', value.target.value)}\r\n                    />\r\n                    <Grid container justify={'space-around'}>\r\n                        <Button variant={'contained'} color={\"primary\"} className={'setAside'} onClick={() => handleClose()}>Cancel</Button>\r\n                        <Button variant={'contained'} color={\"primary\"} className={'setAside'} onClick={() => buyTicket()}>Set Aside</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Dialog>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CentralInfo;","F:\\JFTech\\Puntocero\\myapp\\src\\Component\\Header\\index.js",[],["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":32,"column":9,"nodeType":"111","messageId":"112","endLine":32,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":51,"column":13,"nodeType":"115","endLine":61,"endColumn":4},{"ruleId":"113","severity":1,"message":"116","line":61,"column":6,"nodeType":"117","endLine":61,"endColumn":12,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":41,"column":19,"nodeType":"121","messageId":"122","endLine":41,"endColumn":21},{"ruleId":"109","severity":1,"message":"123","line":9,"column":10,"nodeType":"111","messageId":"112","endLine":9,"endColumn":15},{"ruleId":"109","severity":1,"message":"124","line":9,"column":17,"nodeType":"111","messageId":"112","endLine":9,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":13,"column":16,"nodeType":"121","messageId":"122","endLine":13,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":13,"column":35,"nodeType":"121","messageId":"122","endLine":13,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":20,"column":15,"nodeType":"127","endLine":20,"endColumn":51},{"ruleId":"109","severity":1,"message":"128","line":9,"column":10,"nodeType":"111","messageId":"112","endLine":9,"endColumn":16},{"ruleId":"109","severity":1,"message":"129","line":9,"column":18,"nodeType":"111","messageId":"112","endLine":9,"endColumn":27},{"ruleId":"109","severity":1,"message":"130","line":10,"column":10,"nodeType":"111","messageId":"112","endLine":10,"endColumn":13},{"ruleId":"113","severity":1,"message":"131","line":17,"column":6,"nodeType":"117","endLine":17,"endColumn":11,"suggestions":"132"},{"ruleId":"113","severity":1,"message":"114","line":54,"column":13,"nodeType":"115","endLine":63,"endColumn":4},{"ruleId":"113","severity":1,"message":"133","line":63,"column":6,"nodeType":"117","endLine":63,"endColumn":18,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"126","line":78,"column":17,"nodeType":"127","endLine":78,"endColumn":74},{"ruleId":"109","severity":1,"message":"135","line":3,"column":16,"nodeType":"111","messageId":"112","endLine":3,"endColumn":25},{"ruleId":"109","severity":1,"message":"136","line":6,"column":16,"nodeType":"111","messageId":"112","endLine":6,"endColumn":18},{"ruleId":"109","severity":1,"message":"137","line":40,"column":12,"nodeType":"111","messageId":"112","endLine":40,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":43,"column":15,"nodeType":"115","endLine":52,"endColumn":6},{"ruleId":"113","severity":1,"message":"138","line":63,"column":8,"nodeType":"117","endLine":63,"endColumn":17,"suggestions":"139"},{"ruleId":"109","severity":1,"message":"140","line":65,"column":11,"nodeType":"111","messageId":"112","endLine":65,"endColumn":23},{"ruleId":"109","severity":1,"message":"141","line":72,"column":11,"nodeType":"111","messageId":"112","endLine":72,"endColumn":23},{"ruleId":"109","severity":1,"message":"142","line":107,"column":22,"nodeType":"111","messageId":"112","endLine":107,"endColumn":31},{"ruleId":"109","severity":1,"message":"143","line":107,"column":82,"nodeType":"111","messageId":"112","endLine":107,"endColumn":86},{"ruleId":"109","severity":1,"message":"144","line":107,"column":95,"nodeType":"111","messageId":"112","endLine":107,"endColumn":102},{"ruleId":"109","severity":1,"message":"145","line":107,"column":104,"nodeType":"111","messageId":"112","endLine":107,"endColumn":115},{"ruleId":"109","severity":1,"message":"146","line":12,"column":5,"nodeType":"111","messageId":"112","endLine":12,"endColumn":11},{"ruleId":"109","severity":1,"message":"147","line":110,"column":13,"nodeType":"111","messageId":"112","endLine":110,"endColumn":27},{"ruleId":"109","severity":1,"message":"148","line":175,"column":11,"nodeType":"111","messageId":"112","endLine":175,"endColumn":22},{"ruleId":"113","severity":1,"message":"149","line":186,"column":8,"nodeType":"117","endLine":186,"endColumn":10,"suggestions":"150"},{"ruleId":"109","severity":1,"message":"151","line":201,"column":119,"nodeType":"111","messageId":"112","endLine":201,"endColumn":128},{"ruleId":"152","severity":1,"message":"153","line":311,"column":82,"nodeType":"115","messageId":"154","endLine":311,"endColumn":84},{"ruleId":"105","replacedBy":"155"},{"ruleId":"107","replacedBy":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'addEvent' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getDataFromDB'. Either include it or remove the dependency array.","ArrayExpression",["159"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'error' is assigned a value but never used.","'seterror' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'imgUri' is assigned a value but never used.","'setimgUri' is assigned a value but never used.","'Url' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'img'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["161"],"'TextField' is defined but never used.","'db' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setstate(s => ...)' if you only need 'state' in the 'setstate' call.",["162"],"'handleChange' is assigned a value but never used.","'handleQRCode' is assigned a value but never used.","'eventName' is assigned a value but never used.","'gift' is assigned a value but never used.","'sDetail' is assigned a value but never used.","'giftDetails' is assigned a value but never used.","'QRCode' is assigned a value but never used.","'tableDataIndex' is assigned a value but never used.","'makePayment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTable'. Either include it or remove the dependency array.",["163"],"'hoverItem' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["157"],["158"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [getDataFromDB, user]",{"range":"174","text":"175"},"Update the dependencies array to be: [img, url]",{"range":"176","text":"177"},"Update the dependencies array to be: [imageAsUrl, user.uid]",{"range":"178","text":"179"},"Update the dependencies array to be: [history, state]",{"range":"180","text":"181"},"Update the dependencies array to be: [getTable]",{"range":"182","text":"183"},[1834,1840],"[getDataFromDB, user]",[457,462],"[img, url]",[1894,1906],"[imageAsUrl, user.uid]",[1684,1693],"[history, state]",[5165,5167],"[getTable]"]